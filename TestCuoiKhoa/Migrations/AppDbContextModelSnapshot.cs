// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestCuoiKhoa.Context;

#nullable disable

namespace TestCuoiKhoa.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestCuoiKhoa.Entities.BaiViet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChuDeId")
                        .HasColumnType("int");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDungNgan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaiKhoanId")
                        .HasColumnType("int");

                    b.Property<string>("TenBaiViet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTacGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianTao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ChuDeId");

                    b.HasIndex("TaiKhoanId");

                    b.ToTable("BaiViet_tbl");
                });

            modelBuilder.Entity("TestCuoiKhoa.Entities.ChuDe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LoaiBaiVietId")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChuDe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoaiBaiVietId");

                    b.ToTable("ChuDe_tbl");
                });

            modelBuilder.Entity("TestCuoiKhoa.Entities.DangKyHoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HocVienId")
                        .HasColumnType("int");

                    b.Property<int>("KhoaHocId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayDangKy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<int>("TaiKhoanId")
                        .HasColumnType("int");

                    b.Property<int>("TinhTrangHocId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HocVienId");

                    b.HasIndex("KhoaHocId");

                    b.HasIndex("TaiKhoanId");

                    b.HasIndex("TinhTrangHocId");

                    b.ToTable("DangKyHoc_tbl");
                });

            modelBuilder.Entity("TestCuoiKhoa.Entities.HocVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhuongXa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuanHuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoNha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinhThanh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HocVien_tbl");
                });

            modelBuilder.Entity("TestCuoiKhoa.Entities.KhoaHoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GioiThieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("HocPhi")
                        .HasColumnType("float");

                    b.Property<int>("LoaiKhoaHocId")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoHocVien")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongMon")
                        .HasColumnType("int");

                    b.Property<string>("TenKhoaHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("ThoiGianHoc")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("LoaiKhoaHocId");

                    b.ToTable("KhoaHoc_tbl");
                });

            modelBuilder.Entity("TestCuoiKhoa.Entities.LoaiBaiViet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiBaiViet_tbl");
                });

            modelBuilder.Entity("TestCuoiKhoa.Entities.LoaiKhoaHoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiKhoaHoc_tbl");
                });

            modelBuilder.Entity("TestCuoiKhoa.Entities.QuyenHan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenQuyenHan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QuyenHan_tbl");
                });

            modelBuilder.Entity("TestCuoiKhoa.Entities.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpiredTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TaiKhoanId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TaiKhoanId");

                    b.ToTable("RefreshToken_tbl");
                });

            modelBuilder.Entity("TestCuoiKhoa.Entities.TaiKhoan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuyenHanId")
                        .HasColumnType("int");

                    b.Property<string>("TenNguoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTaiKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuyenHanId");

                    b.ToTable("TaiKhoan_tbl");
                });

            modelBuilder.Entity("TestCuoiKhoa.Entities.TinhTrangHoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenTinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TinhTrangHoc_tbl");
                });

            modelBuilder.Entity("TestCuoiKhoa.Entities.BaiViet", b =>
                {
                    b.HasOne("TestCuoiKhoa.Entities.ChuDe", "ChuDe")
                        .WithMany("BaiViets")
                        .HasForeignKey("ChuDeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestCuoiKhoa.Entities.TaiKhoan", "TaiKhoan")
                        .WithMany("BaiViets")
                        .HasForeignKey("TaiKhoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChuDe");

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("TestCuoiKhoa.Entities.ChuDe", b =>
                {
                    b.HasOne("TestCuoiKhoa.Entities.LoaiBaiViet", "LoaiBaiViet")
                        .WithMany("ChuDes")
                        .HasForeignKey("LoaiBaiVietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiBaiViet");
                });

            modelBuilder.Entity("TestCuoiKhoa.Entities.DangKyHoc", b =>
                {
                    b.HasOne("TestCuoiKhoa.Entities.HocVien", "HocVien")
                        .WithMany("DangKyHocs")
                        .HasForeignKey("HocVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestCuoiKhoa.Entities.KhoaHoc", "KhoaHoc")
                        .WithMany("DangKyHocs")
                        .HasForeignKey("KhoaHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestCuoiKhoa.Entities.TaiKhoan", "TaiKhoan")
                        .WithMany("DangKyHocs")
                        .HasForeignKey("TaiKhoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestCuoiKhoa.Entities.TinhTrangHoc", "TinhTrangHoc")
                        .WithMany("DangKyHocs")
                        .HasForeignKey("TinhTrangHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HocVien");

                    b.Navigation("KhoaHoc");

                    b.Navigation("TaiKhoan");

                    b.Navigation("TinhTrangHoc");
                });

            modelBuilder.Entity("TestCuoiKhoa.Entities.KhoaHoc", b =>
                {
                    b.HasOne("TestCuoiKhoa.Entities.LoaiKhoaHoc", "LoaiKhoaHoc")
                        .WithMany("KhoaHocs")
                        .HasForeignKey("LoaiKhoaHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiKhoaHoc");
                });

            modelBuilder.Entity("TestCuoiKhoa.Entities.RefreshToken", b =>
                {
                    b.HasOne("TestCuoiKhoa.Entities.TaiKhoan", "TaiKhoan")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("TaiKhoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("TestCuoiKhoa.Entities.TaiKhoan", b =>
                {
                    b.HasOne("TestCuoiKhoa.Entities.QuyenHan", "QuyenHan")
                        .WithMany("TaiKhoans")
                        .HasForeignKey("QuyenHanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuyenHan");
                });

            modelBuilder.Entity("TestCuoiKhoa.Entities.ChuDe", b =>
                {
                    b.Navigation("BaiViets");
                });

            modelBuilder.Entity("TestCuoiKhoa.Entities.HocVien", b =>
                {
                    b.Navigation("DangKyHocs");
                });

            modelBuilder.Entity("TestCuoiKhoa.Entities.KhoaHoc", b =>
                {
                    b.Navigation("DangKyHocs");
                });

            modelBuilder.Entity("TestCuoiKhoa.Entities.LoaiBaiViet", b =>
                {
                    b.Navigation("ChuDes");
                });

            modelBuilder.Entity("TestCuoiKhoa.Entities.LoaiKhoaHoc", b =>
                {
                    b.Navigation("KhoaHocs");
                });

            modelBuilder.Entity("TestCuoiKhoa.Entities.QuyenHan", b =>
                {
                    b.Navigation("TaiKhoans");
                });

            modelBuilder.Entity("TestCuoiKhoa.Entities.TaiKhoan", b =>
                {
                    b.Navigation("BaiViets");

                    b.Navigation("DangKyHocs");

                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("TestCuoiKhoa.Entities.TinhTrangHoc", b =>
                {
                    b.Navigation("DangKyHocs");
                });
#pragma warning restore 612, 618
        }
    }
}
